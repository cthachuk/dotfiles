#+TITLE: Enterprise
#+DATE:  November 24, 2020
#+PROPERTY: header-args :tangle bootstrap.sh

* Overview
* Specs

VMWare virtual machine:

| CPU | 8     |
| RAM | 16GiB |
| HDD | 64GiB |

* Create new virtual machine (QEMU)
- Use =virt manager=
- Create new VM with specs above, using QEMU
- Use nixos 20.09 minimal iso newer than November 1, 2020 (https://releases.nixos.org/?prefix=nixos/20.09-small/)
- Click ~Customize configuration before install~
- Use =i440FX= chipset and =UEFI= firmware

* Bootstrap script (exports to bootstrap.sh)

Using flakes seems to complicate installation. The simplest solution at the
moment is to install a minimal nixos with nix unstable that supports flakes.
Then, proceed with the usual configuration of this host.

** File preamble
#+begin_src sh
#! /usr/bin/env bash
#+end_src

** Set up root file system
#+BEGIN_SRC sh
parted /dev/sda -- mklabel gpt
parted /dev/sda -- mkpart ESP fat32 1MiB 512MiB
parted /dev/sda -- mkpart primary 512MiB 100%
parted /dev/sda -- set 1 boot on
mkfs.fat -F32 -n BOOT /dev/sda1
mkfs.ext4 -L nixos /dev/sda2
#+END_SRC

** Mount drives
#+BEGIN_SRC sh
mount /dev/sda2 /mnt

mkdir -p /mnt/boot
mount /dev/sda1 /mnt/boot
#+END_SRC

** Install minimal nixos configuration that supports flakes

To simplify things, we'll actually write our own basic config files for now.

*** generate basic config
In case this does more than generate config files (which we do next), include this step:
#+begin_src sh
nixos-generate-config --root /mnt
#+end_src

*** hardware-configuration.nix
#+begin_src sh
cat << EOF > /mnt/etc/nixos/hardware-configuration.nix
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-label/nixos";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-label/BOOT";
      fsType = "vfat";
    };

  swapDevices = [ ]; 
}
EOF
#+end_src

*** configuration.nix

#+begin_src sh
cat << EOF > /mnt/etc/nixos/configuration.nix
{ config, pkgs, ... }:

{
  imports = [ ./hardware-configuration.nix ];

  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  nix.package = pkgs.nixUnstable;
  nix.extraOptions = ''
    experimental-features = nix-command flakes
  '';

  networking.hostName = "enterprise";
  time.timeZone = "Americas/Los_Angeles";

  environment.systemPackages = with pkgs; [
    git
    vim
    wget
  ];

  # set an empty root password for now
  users.users.root.initialHashedPassword = "";
  system.stateVersion = "20.09"; 
}
EOF
#+end_src
*** install
#+begin_src sh
nixos-install --no-root-passwd 
#+end_src
* Download and run bootstrap script for base nixos-20.09 that supports flakes

After booting, clone the git repo locally to run setup script.

#+begin_src sh :tangle no
sudo bash
nix-shell -p git --run "git clone https://github.com/cthachuk/dotfiles"
bash dotfiles/hosts/enterprise/setup.sh
#+end_src
* Reboot
#+begin_src sh :tangle no
reboot
#+end_src
* Download dotfiles repo and bootstrap
#+begin_src sh :tangle no
nix-shell -p git --run "git clone https://github.com/cthachuk/dotfiles"
nixos-rebuild switch --flake dotfiles#enterprise
#+end_src
